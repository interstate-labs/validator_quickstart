services:
  cb_pbs:
    # image: interstatenetwork/interstate-pbs-module:0.2.1-dev
    image: interstatenetwork/interstate-pbs-module:0.2.1-dev-feat-cb-constraints-working
    # image: interstatenetwork/mev-boost:0.1.0-dev
    # image: bolt/bolt-boost:0.1.0-test
    container_name: cb_pbs
    ports:
      - 18550:18550
    environment:
      CB_CONFIG: /cb-config.toml
      METRICS_SERVER: 10000
    volumes:
      - ./cb-config.toml:/cb-config.toml:ro
    networks:
      kt-bolt-devnet:
      default:
        # cb_prometheus:
        #   image: prom/prometheus:latest
        #   container_name: cb_prometheus
        #   ports:
        #     - 9090:9090
        #   volumes:
        #     - ./prometheus.yml:/etc/prometheus/prometheus.yml
        #     - ./targets.json:/etc/prometheus/targets.json
        #     - prometheus-data:/prometheus

        # cb_grafana:
        #   image: grafana/grafana:latest
        #   container_name: cb_grafana
        #   ports:
        #     - 3000:3000
        #   environment:
        #     - GF_SECURITY_ADMIN_PASSWORD=admin
        #   volumes:
        #     - ./grafana/dashboards:/etc/grafana/provisioning/dashboards
        #     - ./grafana/datasources:/etc/grafana/provisioning/datasources
        #     - grafana-data:/var/lib/grafana
        #   depends_on:
        #     - cb_prometheus
        #   logging:
        #     driver: none

        # cb_cadvisor:
        #   image: gcr.io/cadvisor/cadvisor
        #   container_name: cb_cadvisor
        #   ports:
        #     - 8080:8080
        #   volumes:
        #     - type: bind
        #       source: /var/run/docker.sock
        #       target: /var/run/docker.sock
        #       read_only: true
        #       bind:
        #         propagation: rslave
        #     - type: bind
        #       source: /sys
        #       target: /sys
        #       read_only: true
        #       bind:
        #         propagation: rslave
        #     - type: bind
        #       source: /var/lib/docker/
        #       target: /var/lib/docker
        #       read_only: true
        #       bind:
        #         propagation: rslave
  
  interstate-boost:
    # interstate-sidecar:
    # image: interstatenetwork/interstate-boost:0.2.1-dev
    image: ghcr.io/chainbound/bolt-sidecar:0.1.0
    # container_name: interstate-boost
    container_name: mev-sidecar-api
    restart: unless-stopped
    ports:
      - "8000:9061" # Interstate RPC port (this should be opened on your firewall!)
      - "18551:9062"
    env_file: ./launch.env
    # entrypoint: /bin/sh -c '/interstate-boost --port $$INTERSTATE_RPC_PORT --chain kurtosis --validator-indexes $$VALIDATOR_INDEXES --beacon-api-url $$BEACON_API_URL --execution-api-url $$EXECUTION_API_URL --engine-api-url $$ENGINE_API_URL --private-key $$SIGNING_KEY --mevboost-url http://cb_pbs:18550 --mevboost-proxy-port 9062 --jwt-hex $$JWT_HEX --fee-recipient $$FEE_RECIPIENT --slot-time 2 --commitment-deadline 100'
    # entrypoint: /bin/sh -c '/interstate-boost --port $$INTERSTATE_RPC_PORT --chain holesky --validator-indexes $$VALIDATOR_INDEXES --beacon-api-url $$BEACON_API_URL --execution-api-url $$EXECUTION_API_URL --engine-api-url $$ENGINE_API_URL --private-key $$SIGNING_KEY --mevboost-url http://cb_pbs:18550 --mevboost-proxy-port 18551 --jwt-hex $$JWT_HEX --fee-recipient $$FEE_RECIPIENT'
    entrypoint: /bin/sh -c '/bolt-sidecar --port $$INTERSTATE_RPC_PORT --chain kurtosis --validator-indexes $$VALIDATOR_INDEXES --beacon-api-url $$BEACON_API_URL --execution-api-url $$EXECUTION_API_URL --engine-api-url $$ENGINE_API_URL --private-key $$SIGNING_KEY --mevboost-url http://cb_pbs:18550 --mevboost-proxy-port 9062 --jwt-hex $$JWT_HEX --fee-recipient $$FEE_RECIPIENT --slot-time 2 --commitment-deadline 100'
    networks:
      kt-bolt-devnet:
      default:
volumes:
  prometheus-data:
    driver: local
  grafana-data:
    driver: local
networks:
  kt-bolt-devnet:
    external: true
